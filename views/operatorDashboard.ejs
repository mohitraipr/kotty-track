<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Kotty Operator Dashboard – Enhanced Overview with Pie Charts</title>
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <meta name="mobile-web-app-capable" content="yes">
  <meta name="apple-mobile-web-app-capable" content="yes">
  <meta name="theme-color" content="#0d6efd">
  <!-- Google Fonts & Bootstrap CSS -->
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <!-- Bootstrap Icons -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
  <!-- Tabulator CSS -->
  <link rel="stylesheet" href="https://unpkg.com/tabulator-tables@5.5.0/dist/css/tabulator.min.css">
  <!-- Chart.js -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js@4.2.1/dist/chart.umd.min.js"></script>

  <style>
    :root {
      --navbar-bg: #2b2d30;
      --main-bg: #f1f3f5;
      --panel-bg: #ffffff;
      --panel-border: #dee2e6;
      --text-color: #343a40;
      --light-text: #6c757d;
      --shadow-color: rgba(0,0,0,0.1);
    }
    body {
      font-family: 'Poppins', sans-serif;
      margin: 0;
      padding-top: 70px; /* space for fixed navbar */
      background-color: var(--main-bg);
      color: var(--text-color);
    }
    .dark-mode {
      background-color: #1c1f22;
      color: #e9ecef;
    }

    /* Top Navigation */
    .top-nav {
      background: var(--navbar-bg);
      border-bottom: 2px solid #141618;
      position: fixed;
      top: 0; left: 0; right: 0;
      z-index: 1050;
      padding: 0.5rem 1rem;
      box-shadow: 0 2px 6px rgba(0,0,0,0.15);
    }
    .nav-brand {
      font-size: 1.5rem;
      font-weight: 600;
      color: #f8f9fa !important;
      margin: 0;
    }

    /* Navigation Cards (no sidebar) */
    .nav-cards {
      margin-top: 1rem;
      margin-bottom: 2rem;
    }
    .nav-cards .card-link {
      text-decoration: none;
      color: inherit;
    }
    .nav-cards .card-link:hover .nav-card {
      box-shadow: 0 4px 12px var(--shadow-color);
      transform: translateY(-2px);
    }
    .nav-card {
      background: var(--panel-bg);
      border: 1px solid var(--panel-border);
      border-radius: 6px;
      text-align: center;
      padding: 1.5rem 1rem;
      transition: all 0.15s ease;
    }
    .nav-card i {
      font-size: 1.8rem;
      margin-bottom: 0.5rem;
      display: block;
    }
    .nav-card h5 {
      font-size: 1rem;
      font-weight: 500;
      margin: 0;
    }

    /* Portal Header */
    .portal-header {
      margin-top: 1rem;
      margin-bottom: 1rem;
    }
    .portal-header h1 {
      font-size: 1.8rem;
      font-weight: 600;
      margin-bottom: 0.3rem;
    }
    .portal-header p.text-muted {
      color: var(--light-text) !important;
      margin-bottom: 0;
    }

    /* Stat Boxes */
    .stat-box {
      background: var(--panel-bg);
      border-radius: 8px;
      text-align: center;
      padding: 1rem;
      box-shadow: 0 2px 6px var(--shadow-color);
      transition: all 0.15s ease-in-out;
    }
    .stat-box:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 10px var(--shadow-color);
    }
    .stat-title {
      font-size: 0.95rem;
      color: var(--light-text);
      margin-bottom: 0.4rem;
    }
    .stat-value {
      font-size: 1.5rem;
      font-weight: 600;
      color: #0d6efd;
    }

    /* Data Panels */
    .data-panel {
      background: var(--panel-bg);
      border: 1px solid var(--panel-border);
      border-radius: 8px;
      margin-bottom: 2rem;
      box-shadow: 0 1px 3px var(--shadow-color);
    }
    .data-panel .panel-header {
      padding: 0.75rem 1rem;
      background: #f8f9fa;
      border-bottom: 1px solid var(--panel-border);
      font-weight: 500;
      display: flex;
      align-items: center;
    }
    .data-panel .panel-body {
      padding: 1rem;
    }

    /* Leftover Value Indicators */
    .leftover-value {
      padding: 3px 8px;
      border-radius: 4px;
      font-weight: 600;
      margin-right: 5px;
      display: inline-block;
    }
    .leftover-zero {
      background-color: #f8d7da;
      color: #721c24;
    }
    .leftover-nonzero {
      background-color: #cce5ff;
      color: #004085;
    }
    .leftover-unassigned {
      color: #dc3545;
      font-weight: 700;
    }

    /* Table responsiveness */
    .table-responsive {
      overflow-x: auto;
    }
    table thead {
      background-color: #f8f9fa;
    }
    table thead th {
      font-weight: 500;
    }

    /* Nav Tabs */
    .nav-tabs .nav-link.active {
      border-bottom-color: #fff;
    }
    .nav-tabs .nav-link i {
      margin-right: 0.4rem;
    }

    /* For the two Pie Charts in SKU Insights */
    .sku-charts-container {
      display: flex;
      flex-wrap: wrap;
      gap: 1rem;
      align-items: center;
      justify-content: space-around;
    }
    .sku-charts-container > div {
      width: 400px; /* Each chart’s container */
      min-width: 280px;
      flex-shrink: 0;
    }
  </style>
</head>
<body>
  <!-- Top Navigation Bar -->
  <nav class="navbar top-nav">
    <div class="container-fluid d-flex justify-content-between align-items-center">
      <div>
        <a class="navbar-brand nav-brand" href="#">Kotty</a>
      </div>
      <div class="d-flex align-items-center">
        <button id="toggleDarkMode" class="btn btn-outline-light me-2">
          <i class="bi bi-sun"></i>
        </button>
        <a class="btn btn-outline-light" href="/logout">
          <i class="bi bi-box-arrow-left"></i> Logout
        </a>
      </div>
    </div>
  </nav>

  <!-- Main Content (no sidebar) -->
  <div class="container-fluid" style="max-width: 1400px;">
    <!-- Navigation Cards (replacing old sidebar) -->
    <section class="nav-cards">
      <div class="row row-cols-2 row-cols-sm-3 row-cols-md-4 row-cols-lg-5 g-3">
        <div class="col">
          <a class="card-link" href="/operator/dashboard">
            <div class="nav-card">
              <i class="bi bi-speedometer2"></i>
              <h5>Dashboard</h5>
            </div>
          </a>
        </div>
        <div class="col">
          <a class="card-link" href="/operator/editcuttinglots">
            <div class="nav-card">
              <i class="bi bi-pencil-square"></i>
              <h5>Edit Lots</h5>
            </div>
          </a>
        </div>
        <div class="col">
          <a class="card-link" href="/operator/dashboard/download-all-lots">
            <div class="nav-card">
              <i class="bi bi-cloud-arrow-down"></i>
              <h5>Export All</h5>
            </div>
          </a>
        </div>
        <div class="col">
          <a class="card-link" href="/operator/dashboard/leftovers/download">
            <div class="nav-card">
              <i class="bi bi-file-earmark-arrow-down"></i>
              <h5>Leftover CSV</h5>
            </div>
          </a>
        </div>
        <div class="col">
          <a class="card-link" href="/search-dashboard">
            <div class="nav-card">
              <i class="bi bi-search"></i>
              <h5>Search</h5>
            </div>
          </a>
        </div>
        <div class="col">
          <a class="card-link" href="#" onclick="window.print()">
            <div class="nav-card">
              <i class="bi bi-printer"></i>
              <h5>Print</h5>
            </div>
          </a>
        </div>
        <div class="col">
          <a class="card-link" href="/assign-to-washing">
            <div class="nav-card">
              <i class="bi bi-arrow-right-circle"></i>
              <h5>Washing</h5>
            </div>
          </a>
        </div>
        <div class="col">
          <a class="card-link" href="/operator/dashboard/pic-report">
            <div class="nav-card">
              <i class="bi bi-file-earmark-check"></i>
              <h5>Per Piece Report</h5>
            </div>
          </a>
        </div>
        <!-- Pendency Reports -->
        <div class="col">
          <a class="card-link" href="/operator/pendency-report/stitching">
            <div class="nav-card">
              <i class="bi bi-journal-arrow-down"></i>
              <h5>Pendency Stitch</h5>
            </div>
          </a>
        </div>
        <div class="col">
          <a class="card-link" href="/operator/pendency-report/assembly">
            <div class="nav-card">
              <i class="bi bi-journal-arrow-down"></i>
              <h5>Pendency Assembly</h5>
            </div>
          </a>
        </div>
        <div class="col">
          <a class="card-link" href="/operator/pendency-report/washing">
            <div class="nav-card">
              <i class="bi bi-journal-arrow-down"></i>
              <h5>Pendency Washing</h5>
            </div>
          </a>
        </div>
        <div class="col">
          <a class="card-link" href="/operator/pendency-report/finishing">
            <div class="nav-card">
              <i class="bi bi-journal-arrow-down"></i>
              <h5>Pendency Finish</h5>
            </div>
          </a>
        </div>
      </div>
    </section>

    <!-- Portal Header -->
    <div class="portal-header">
      <h1>Kotty Operator Dashboard</h1>
      <p class="text-muted">Enhanced Production &amp; Leftover Overview</p>
    </div>

    <!-- Stat Cards -->
    <div class="container mb-4">
      <div class="row row-cols-2 row-cols-md-3 row-cols-lg-4 g-3 justify-content-center">
        <div class="col">
          <div class="stat-box">
            <div class="stat-title">Total Kits</div>
            <div class="stat-value"><%= lotCount %></div>
          </div>
        </div>
        <div class="col">
          <div class="stat-box">
            <div class="stat-title">Cut Pieces</div>
            <div class="stat-value"><%= totalPiecesCut %></div>
          </div>
        </div>
        <div class="col">
          <div class="stat-box">
            <div class="stat-title">Finished</div>
            <div class="stat-value"><%= totalFinished %></div>
          </div>
        </div>
        <div class="col">
          <div class="stat-box">
            <div class="stat-title">Users</div>
            <div class="stat-value"><%= userCount %></div>
          </div>
        </div>
      </div>
    </div>

    <!-- SKU Insights Panel with Pie Charts -->
    <div class="container">
      <div class="data-panel mb-4">
        <div class="panel-header">
          <i class="bi bi-bar-chart-line"></i>
          <span class="h5 ms-1">SKU Insights</span>
        </div>
        <div class="panel-body">
          <div class="sku-charts-container">
            <!-- Top 10 SKUs Pie Chart -->
            <div>
              <h6 class="mb-3"><i class="bi bi-arrow-up-square"></i> Top 10 SKUs</h6>
              <canvas id="topSKUsChart"></canvas>
            </div>
            <!-- Bottom 10 SKUs Pie Chart -->
            <div>
              <h6 class="mb-3"><i class="bi bi-arrow-down-square"></i> Bottom 10 SKUs</h6>
              <canvas id="bottomSKUsChart"></canvas>
            </div>
          </div>
        </div>
      </div>

      <!-- Tabs for Leftovers and Notes -->
      <ul class="nav nav-tabs" id="inventoryTabs" role="tablist">
        <li class="nav-item" role="presentation">
          <button class="nav-link active" id="leftover-tab" data-bs-toggle="tab" data-bs-target="#leftoverPanel" type="button" role="tab">
            <i class="bi bi-box-seam"></i> Leftovers
          </button>
        </li>
        <li class="nav-item" role="presentation">
          <button class="nav-link" id="notes-tab" data-bs-toggle="tab" data-bs-target="#notesPanel" type="button" role="tab">
            <i class="bi bi-chat-left-text"></i> Notes
          </button>
        </li>
      </ul>
      <div class="tab-content">
        <!-- Leftovers Tab -->
        <div class="tab-pane fade show active" id="leftoverPanel" role="tabpanel">
          <div class="data-panel mt-3">
            <div class="panel-header">
              <i class="bi bi-box2"></i>
              <span class="ms-1">Leftovers (Lazy Loaded)</span>
            </div>
            <div class="panel-body">
              <div class="mb-3">
                <label class="form-check-label me-2 fw-semibold">Show:</label>
                <div class="form-check form-check-inline">
                  <input class="form-check-input" type="radio" name="lotType" id="allLots" value="all" checked>
                  <label class="form-check-label" for="allLots">All</label>
                </div>
                <div class="form-check form-check-inline">
                  <input class="form-check-input" type="radio" name="lotType" id="akshayLots" value="akshay">
                  <label class="form-check-label" for="akshayLots">Akshay</label>
                </div>
                <div class="form-check form-check-inline">
                  <input class="form-check-input" type="radio" name="lotType" id="nonAkshayLots" value="non-akshay">
                  <label class="form-check-label" for="nonAkshayLots">Non-Akshay</label>
                </div>
              </div>
              <div class="mb-3 d-flex flex-column flex-sm-row justify-content-between align-items-center gap-2">
                <input id="leftoverSearchInput" type="text" class="form-control" placeholder="Global search in Leftovers...">
                <button id="columnChooser" class="btn btn-outline-secondary">Columns</button>
              </div>
              <div id="leftoverTable" style="height:500px;"></div>
              <button id="loadMoreLeftovers" class="btn btn-primary mt-2">Load More</button>
            </div>
          </div>
        </div>

        <!-- Notes Tab -->
        <div class="tab-pane fade" id="notesPanel" role="tabpanel">
          <div class="data-panel mt-3">
            <div class="panel-header">
              <i class="bi bi-chat-left-text"></i>
              <span class="ms-1">Dashboard Notes</span>
            </div>
            <div class="panel-body">
              <ul class="mb-0">
                <li><strong>Hidden Columns:</strong> Assembly and Wash columns are hidden for non-Akshay lots.</li>
                <li><strong>Total Leftover:</strong> cutting_lots.total_pieces – sum(finishing_dispatches.quantity)</li>
                <li><strong>Dispatch Leftover:</strong> sum(finishing_data.total_pieces) – sum(finishing_dispatches.quantity)</li>
                <li><strong>Dark Mode:</strong> Toggled with localStorage.</li>
              </ul>
            </div>
          </div>
        </div>
      </div>

      <!-- Advanced Analytics Panel -->
      <div class="data-panel mt-4">
        <div class="panel-header">
          <i class="bi bi-graph-up-arrow"></i>
          <span class="ms-1">Advanced Stats</span>
        </div>
        <div class="panel-body">
          <div class="row">
            <div class="col-md-3">
              <p><strong>Stitch Conversion:</strong> <%= advancedAnalytics.stitchConversion %>%</p>
            </div>
            <div class="col-md-3">
              <p><strong>Wash Conversion:</strong> <%= advancedAnalytics.washConversion %>%</p>
            </div>
            <div class="col-md-3">
              <p><strong>Finish Conversion:</strong> <%= advancedAnalytics.finishConversion %>%</p>
            </div>
            <div class="col-md-3">
              <p><strong>Avg Turnaround:</strong> <%= advancedAnalytics.avgTurnaroundTime %> days</p>
            </div>
          </div>
          <div class="row mt-2">
            <div class="col-md-3">
              <p><strong>Pending Kits:</strong> <%= advancedAnalytics.pendingLots %></p>
            </div>
            <div class="col-md-3">
              <p><strong>Total Kits:</strong> <%= advancedAnalytics.totalLots %></p>
            </div>
            <div class="col-md-3">
              <p><strong>Stitch Approval:</strong> <%= advancedAnalytics.stitchApprovalRate %>%</p>
            </div>
            <div class="col-md-3">
              <p><strong>Wash Approval:</strong> <%= advancedAnalytics.washApprovalRate %>%</p>
            </div>
          </div>
        </div>
      </div>

      <!-- Operator Performance Panel -->
      <div class="data-panel mt-4">
        <div class="panel-header">
          <i class="bi bi-people"></i>
          <span class="ms-1">Operator Tracking</span>
        </div>
        <div class="panel-body table-responsive">
          <table class="table table-striped table-bordered table-hover">
            <thead class="table-light">
              <tr>
                <th>ID</th>
                <th>User</th>
                <th>Stitched</th>
                <th>Washed</th>
                <th>Finished</th>
              </tr>
            </thead>
            <tbody>
              <% Object.keys(operatorPerformance).forEach(function(uid){ 
                   var opObj = operatorPerformance[uid];
              %>
              <tr>
                <td><%= uid %></td>
                <td><%= opObj.username %></td>
                <td><%= opObj.totalStitched %></td>
                <td><%= opObj.totalWashed %></td>
                <td><%= opObj.totalFinished %></td>
              </tr>
              <% }); %>
            </tbody>
          </table>
        </div>
      </div>
    </div> <!-- end container -->

    <!-- Edit Kit Modals -->
    <% Object.keys(lotDetails).forEach(function(kitNumber){ 
         var kitData = lotDetails[kitNumber];
         var cLot = kitData.cuttingLot;
         if(!cLot) return;
         var totalPieces = cLot.total_pieces || 0;
         var existingRemark = cLot.remark || '';
    %>
    <div class="modal fade" id="editModal-<%= kitNumber %>" tabindex="-1" aria-hidden="true">
      <div class="modal-dialog">
        <form method="POST" action="/operator/dashboard/edit-lot">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title">
                <i class="bi bi-pencil-square"></i> Update Kit <%= kitNumber %>
              </h5>
              <button type="button" class="btn btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
              <input type="hidden" name="lot_no" value="<%= kitNumber %>">
              <div class="mb-3">
                <label class="form-label fw-semibold">Pieces Count</label>
                <input type="number" class="form-control" name="total_pieces" value="<%= totalPieces %>" required>
              </div>
              <div class="mb-3">
                <label class="form-label fw-semibold">Remarks</label>
                <textarea class="form-control" name="remark" rows="3"><%= existingRemark %></textarea>
              </div>
              <small class="text-muted">Override the piece count or adjust remarks.</small>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                <i class="bi bi-x-circle"></i> Cancel
              </button>
              <button type="submit" class="btn btn-primary">
                <i class="bi bi-check2-circle"></i> Save
              </button>
            </div>
          </div>
        </form>
      </div>
    </div>
    <% }); %>

    <!-- Column Chooser Modal -->
    <div class="modal fade" id="columnChooserModal" tabindex="-1" aria-labelledby="columnChooserModalLabel" aria-hidden="true">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="columnChooserModalLabel">Select Columns</h5>
            <button type="button" class="btn btn-close" data-bs-dismiss="modal"></button>
          </div>
          <div class="modal-body">
            <div id="columnChooserContent"></div>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Done</button>
          </div>
        </div>
      </div>
    </div>

  <!-- Scripts -->
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://unpkg.com/tabulator-tables@5.5.0/dist/js/tabulator.min.js"></script>

  <script>
    /********************************************
     * Dark Mode Toggle
    ********************************************/
    const body = document.body;
    const toggleDarkModeBtn = document.getElementById('toggleDarkMode');

    // Initialize from localStorage
    if(localStorage.getItem('kottyDarkMode') === 'true'){
      body.classList.add('dark-mode');
      toggleDarkModeBtn.innerHTML = '<i class="bi bi-moon"></i>';
    } else {
      toggleDarkModeBtn.innerHTML = '<i class="bi bi-sun"></i>';
    }

    // We'll need references to the charts to update them on toggle:
    let topSKUsChart, bottomSKUsChart;

    toggleDarkModeBtn.addEventListener('click', function(){
      const isDarkNow = !body.classList.contains('dark-mode'); 
      // "isDarkNow" will be true if we are about to enable dark mode.
      body.classList.toggle('dark-mode');
      localStorage.setItem('kottyDarkMode', body.classList.contains('dark-mode'));
      toggleDarkModeBtn.innerHTML = body.classList.contains('dark-mode') 
        ? '<i class="bi bi-moon"></i>' 
        : '<i class="bi bi-sun"></i>';

      // Update chart text color for legend & labels if desired:
      const textColor = body.classList.contains('dark-mode') ? '#e9ecef' : '#343a40';
      if(topSKUsChart){
        topSKUsChart.options.plugins.legend.labels.color = textColor;
        topSKUsChart.update();
      }
      if(bottomSKUsChart){
        bottomSKUsChart.options.plugins.legend.labels.color = textColor;
        bottomSKUsChart.update();
      }
    });

    /********************************************
     * Convert SKU Insights to Pie Charts
    ********************************************/
    // We embed the EJS arrays as JS objects:
    const topSKUsData = <%= JSON.stringify(advancedAnalytics.top10SKUs) %>;
    const bottomSKUsData = <%= JSON.stringify(advancedAnalytics.bottom10SKUs) %>;

    // Prepare data for Chart.js
    const topLabels = topSKUsData.map(item => item.sku);
    const topValues = topSKUsData.map(item => item.total);
    const bottomLabels = bottomSKUsData.map(item => item.sku);
    const bottomValues = bottomSKUsData.map(item => item.total);

    // Check if dark mode on load:
    const initialTextColor = body.classList.contains('dark-mode') ? '#e9ecef' : '#343a40';

    window.addEventListener('DOMContentLoaded', () => {
      // Create Top 10 SKUs Pie
      const topCtx = document.getElementById('topSKUsChart').getContext('2d');
      topSKUsChart = new Chart(topCtx, {
        type: 'pie',
        data: {
          labels: topLabels,
          datasets: [{
            label: 'Pieces',
            data: topValues
          }]
        },
        options: {
          responsive: true,
          plugins: {
            legend: {
              labels: {
                color: initialTextColor  // Adjust text color in dark mode
              }
            }
          }
        }
      });

      // Create Bottom 10 SKUs Pie
      const bottomCtx = document.getElementById('bottomSKUsChart').getContext('2d');
      bottomSKUsChart = new Chart(bottomCtx, {
        type: 'pie',
        data: {
          labels: bottomLabels,
          datasets: [{
            label: 'Pieces',
            data: bottomValues
          }]
        },
        options: {
          responsive: true,
          plugins: {
            legend: {
              labels: {
                color: initialTextColor
              }
            }
          }
        }
      });
    });

    /********************************************
     * Tabulator for Leftovers (lazy loading)
    ********************************************/
    let leftoverPage = 1;
    const leftoverSize = 100;
    let leftoverSearch = '';
    let leftoverData = [];

    const leftoverColumns = [
      { title: "Kit #", field: "kitNumber", headerFilter: "input", width: 100 },
      { title: "SKU", field: "sku", headerFilter: "input", width: 150 },
      { title: "Total Pieces", field: "totalPieces", headerFilter: "input", width: 120 },
      {
        title: "Stitch Leftover",
        field: "leftoverStitch",
        headerFilter: "input",
        width: 140,
        formatter: formatLeftoverWithOperator,
        formatterParams: { operatorField: "stitchingOperator" }
      },
      {
        title: "Assembly Leftover",
        field: "leftoverAssembly",
        headerFilter: "input",
        width: 140,
        formatter: formatLeftoverWithOperator,
        formatterParams: { operatorField: "assemblyOperator" }
      },
      {
        title: "Wash Leftover",
        field: "leftoverWash",
        headerFilter: "input",
        width: 140,
        formatter: formatLeftoverWithOperator,
        formatterParams: { operatorField: "washOperator" }
      },
      {
        title: "Finish Leftover",
        field: "leftoverFinish",
        headerFilter: "input",
        width: 140,
        formatter: formatLeftoverWithOperator,
        formatterParams: { operatorField: "finishOperator" }
      },
      { title: "Remarks", field: "remark", headerFilter: "input", width: 150 },
      {
        title: "Total Leftover",
        field: "totalPiecesLeft",
        headerFilter: "input",
        width: 140,
        formatter: formatLeftover
      },
      {
        title: "Dispatch Leftover",
        field: "dispatchLeftover",
        headerFilter: "input",
        width: 140,
        formatter: formatLeftover
      }
    ];

    function formatLeftoverWithOperator(cell, formatterParams) {
      const value = cell.getValue();
      const row = cell.getRow().getData();
      const operatorField = formatterParams.operatorField;
      const operator = row[operatorField] || 'N/A';
      if (typeof value === "number") {
        const cls = value === 0 ? "leftover-zero" : "leftover-nonzero";
        let html = `<span class="leftover-value ${cls}">${value}</span>`;
        if (operatorField && operator.toLowerCase() !== "n/a") {
          html += ` <small class="text-muted">(User: ${operator})</small>`;
        } else if (operatorField) {
          html += ` <small class="leftover-unassigned">(Unassigned)</small>`;
        }
        return html;
      }
      return value;
    }

    function formatLeftover(cell) {
      const value = cell.getValue();
      if (typeof value === "number") {
        const cls = value === 0 ? "leftover-zero" : "leftover-nonzero";
        return `<span class="leftover-value ${cls}">${value}</span>`;
      }
      return value;
    }

    // Create Tabulator instance
    const leftoverTable = new Tabulator("#leftoverTable", {
      layout: "fitColumns",
      movableColumns: true,
      pagination: "local",
      paginationSize: leftoverSize,
      columns: leftoverColumns,
      placeholder: "No Data Loaded"
    });

    // Load leftover data from server (lazy)
    async function loadLeftoverPage(pageNum) {
      try {
        const response = await fetch(
          `/operator/dashboard/api/leftovers?page=${pageNum}&size=${leftoverSize}&search=${encodeURIComponent(leftoverSearch)}`
        );
        if (!response.ok) throw new Error(response.statusText);

        const json = await response.json();
        if (pageNum === 1) {
          leftoverData = json.data;
          leftoverTable.setData(leftoverData);
        } else {
          leftoverData = leftoverData.concat(json.data);
          leftoverTable.replaceData(leftoverData);
        }
      } catch (err) {
        console.error("Error loading leftovers:", err);
      }
    }
    loadLeftoverPage(1);

    // "Load More" button
    document.getElementById("loadMoreLeftovers").addEventListener("click", function(){
      leftoverPage++;
      loadLeftoverPage(leftoverPage);
    });

    // Global search
    document.getElementById("leftoverSearchInput").addEventListener("keyup", function(){
      leftoverSearch = this.value;
      leftoverPage = 1;
      loadLeftoverPage(1);
    });

    // Filter for Akshay / Non-Akshay
    function updateLeftoverFilter(){
      const mode = document.querySelector('input[name="lotType"]:checked')?.value || "all";
      if (mode === "all") {
        leftoverTable.clearFilter("lotType");
        leftoverTable.getColumn("leftoverAssembly")?.show();
        leftoverTable.getColumn("leftoverWash")?.show();
      } else if (mode === "akshay") {
        leftoverTable.setFilter("lotType", "=", "akshay");
        leftoverTable.getColumn("leftoverAssembly")?.show();
        leftoverTable.getColumn("leftoverWash")?.show();
      } else {
        leftoverTable.setFilter(data => data.lotType !== "akshay");
        leftoverTable.getColumn("leftoverAssembly")?.hide();
        leftoverTable.getColumn("leftoverWash")?.hide();
      }
      leftoverTable.redraw();
    }
    document.querySelectorAll('input[name="lotType"]').forEach(radio => {
      radio.addEventListener("change", updateLeftoverFilter);
    });

    // Column Chooser
    document.getElementById("columnChooser").addEventListener("click", function() {
      const columns = leftoverTable.getColumns();
      const container = document.getElementById("columnChooserContent");
      container.innerHTML = "";

      columns.forEach(function(col){
        const field = col.getField();
        if (field) {
          const title = col.getDefinition().title;
          const isVisible = col.isVisible();

          const checkbox = document.createElement("input");
          checkbox.type = "checkbox";
          checkbox.checked = isVisible;
          checkbox.setAttribute("data-field", field);
          checkbox.classList.add("form-check-input", "me-2");

          const label = document.createElement("label");
          label.classList.add("form-check-label");
          label.textContent = title;

          const div = document.createElement("div");
          div.classList.add("form-check", "mb-2");
          div.appendChild(checkbox);
          div.appendChild(label);
          container.appendChild(div);

          // Toggle column visibility
          checkbox.addEventListener("change", function(){
            if (this.checked){
              leftoverTable.getColumn(field).show();
            } else {
              leftoverTable.getColumn(field).hide();
            }
          });
        }
      });
      const modal = new bootstrap.Modal(document.getElementById("columnChooserModal"));
      modal.show();
    });
  </script>
</body>
</html>
