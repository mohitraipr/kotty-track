<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Jeans Assembly Dashboard</title>
  <meta name="viewport" content="width=device-width, initial-scale=1" />

  <!-- Bootstrap 5 & FontAwesome -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" rel="stylesheet">

  <!-- jQuery FIRST (the only copy on the page) -->
  <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>

  <!-- Select2 4.1.0-rc.0 -->
  <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>

  <style>
    body { background-color:#f8f9fa; }
    .navbar { box-shadow:0 2px 4px rgba(0,0,0,.1); }
    .nav-tabs .nav-link { font-weight:500; }

    /* Make Select2 look like Bootstrap form-controls */
    .select2-container .select2-selection--single{
      height:calc(2.5rem + 2px);
      padding:.5rem .75rem;
      border:1px solid #ced4da;
      border-radius:.375rem;
    }
    .select2-container--default .select2-selection--single .select2-selection__arrow{
      height:2.5rem;
      right:.75rem;
    }

    /* Hide any stray autocomplete remnants */
    .autocomplete-items{display:none!important;}
  </style>
</head>

<body>
  <!-- NAVBAR -->
  <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <div class="container">
      <a class="navbar-brand" href="#"><i class="fas fa-people-carry"></i> Jeans Assembly Dashboard</a>
      <div class="ms-auto">
        <a href="/jeansassemblydashboard/approve" class="btn btn-outline-info btn-sm me-2">
          <i class="fas fa-check-circle"></i> Approvals
        </a>
        <a href="/challandashboard" class="btn btn-outline-info btn-sm me-2">
          <i class="fas fa-file-signature"></i> Challan
        </a>
        <a href="/logout" class="btn btn-outline-danger btn-sm">
          <i class="fas fa-sign-out-alt"></i> Logout
        </a>
      </div>
    </div>
  </nav>

  <div class="container my-4">
    <%- include('partials/flashMessages') %>

    <!-- TABS -->
    <ul class="nav nav-tabs" id="dashboardTabs" role="tablist">
      <li class="nav-item">
        <button class="nav-link active" id="create-tab" data-bs-toggle="tab" data-bs-target="#createTab" type="button" role="tab">
          <i class="fas fa-plus-circle me-1"></i> Create Entry
        </button>
      </li>
      <li class="nav-item">
        <button class="nav-link" id="existing-tab" data-bs-toggle="tab" data-bs-target="#existingTab" type="button" role="tab">
          <i class="fas fa-list me-1"></i> Existing Entries
        </button>
      </li>
    </ul>

    <div class="tab-content mt-3">
      <!-- CREATE ENTRY TAB -->
      <div class="tab-pane fade show active" id="createTab" role="tabpanel">
        <div class="card shadow-sm">
          <div class="card-header bg-primary text-white">
            <i class="fas fa-plus-circle"></i> Create New Jeans Assembly Entry
          </div>
          <div class="card-body">
            <form id="createForm" enctype="multipart/form-data">
              <!-- LOT SELECT (searchable) -->
              <div class="mb-3">
                <label for="selectedLotId" class="form-label">Select Lot</label>
                <select id="selectedLotId" name="selectedLotId" class="form-select" required>
                  <option value="">-- Choose a Lot --</option>
                  <% lots.forEach(l => { %>
                    <option value="<%= l.id %>">Lot <%= l.lot_no %> (SKU: <%= l.sku %>)</option>
                  <% }) %>
                </select>
              </div>

              <div class="mb-3">
                <label class="form-label">Remark (optional)</label>
                <input type="text" name="remark" class="form-control" placeholder="Enter remark…">
              </div>

              <div class="mb-3">
                <label class="form-label">Image (optional)</label>
                <input type="file" name="image_file" class="form-control" accept="image/*">
              </div>

              <div class="mb-3">
                <label class="form-label">Assign to Washer</label>
                <select name="washer_id" class="form-select">
                  <option value="">-- Do not assign to washing --</option>
                  <% washers.forEach(w => { %>
                    <option value="<%= w.id %>"><%= w.username %></option>
                  <% }) %>
                </select>
                <p class="text-muted small mb-0">If selected, all created pieces will be assigned automatically.</p>
              </div>

              <!-- SIZES TABLE -->
              <div id="lotSizesContainer" style="display:none;">
                <h5 class="mt-4">Sizes for This Lot</h5>
                <table class="table table-bordered" id="sizesTable">
                  <thead class="table-light"><tr><th>Size Label</th><th>Max Available</th><th>Enter Pieces</th></tr></thead>
                  <tbody></tbody>
                </table>
                <div class="mt-2">
                  <strong>Total Pieces Selected:</strong> <span id="createTotalPieces">0</span>
                </div>
              </div>

              <button type="submit" class="btn btn-success mt-3">
                <i class="fas fa-check me-1"></i> Create Jeans Assembly Entry
              </button>
            </form>
          </div>
        </div>
      </div>

      <!-- EXISTING ENTRIES TAB -->
      <div class="tab-pane fade" id="existingTab" role="tabpanel">
        <div class="d-flex justify-content-between align-items-center mb-3">
          <h4><i class="fas fa-list"></i> Existing Jeans Assembly Entries</h4>
          <a href="/jeansassemblydashboard/download-all" class="btn btn-success">
            <i class="fas fa-file-excel me-1"></i> Download Excel
          </a>
        </div>

        <div class="input-group mb-3">
          <span class="input-group-text"><i class="fas fa-search"></i></span>
          <input id="searchExisting" type="text" class="form-control" placeholder="Search by lot or SKU…">
        </div>

        <div id="existingEntriesContainer" class="accordion"></div>
        <div id="loadMoreSentinel" style="height:60px;"></div>
      </div>
    </div>
  </div>

  <!-- UPDATE MODAL -->
  <div class="modal fade" id="updateModal" tabindex="-1" aria-labelledby="updateModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <form id="updateForm">
          <div class="modal-header">
            <h5 class="modal-title" id="updateModalLabel"><i class="fas fa-edit"></i> Update Jeans Assembly Data</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
          </div>
          <div class="modal-body">
            <p><strong>Updating Entry ID:</strong> <span id="updatingEntryId"></span></p>
            <table class="table table-bordered" id="updateSizesTable">
              <thead class="table-light"><tr><th>Size Label</th><th>Already Used</th><th>Max Remain</th><th>New Pieces (Increment)</th></tr></thead>
              <tbody></tbody>
            </table>
            <p class="small text-muted">Leave blank or zero to skip a size.</p>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"><i class="fas fa-times"></i> Cancel</button>
            <button type="submit" class="btn btn-primary"><i class="fas fa-save"></i> Save Updates</button>
          </div>
        </form>
      </div>
    </div>
  </div>

  <!-- Bootstrap Bundle (includes Popper) -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

  <script>
    /* ---------- 1. Initialise Select2 when DOM ready ---------- */
    $(function () {
      $('#selectedLotId').select2({
        placeholder: '-- Choose a Lot --',
        allowClear: true,
        width: '100%',
        minimumResultsForSearch: 0
      });
    });

    /* ---------- 2. Original vanilla-JS logic ---------- */
    const selectedLotId     = document.getElementById('selectedLotId');
    const lotSizesContainer = document.getElementById('lotSizesContainer');
    const sizesTableBody    = document.querySelector('#sizesTable tbody');
    const createTotalPieces = document.getElementById('createTotalPieces');

    selectedLotId.addEventListener('change', async () => {
      const lotId = selectedLotId.value;
      if (!lotId){
        sizesTableBody.innerHTML=''; lotSizesContainer.style.display='none'; return;
      }
      try{
        const r = await fetch(`/jeansassemblydashboard/get-lot-sizes/${lotId}`);
        if(!r.ok) throw new Error('HTTP '+r.status);
        renderSizes(await r.json());
      }catch(e){
        console.error('Error fetching lot sizes:',e);
        sizesTableBody.innerHTML=''; lotSizesContainer.style.display='none';
      }
    });

    function renderSizes(arr){
      sizesTableBody.innerHTML='';
      lotSizesContainer.style.display='block';
      arr.forEach(sz=>{
        sizesTableBody.insertAdjacentHTML('beforeend',`
          <tr>
            <td>${sz.size_label}</td>
            <td>${sz.remain}</td>
            <td><input type="number" class="form-control" min="1" max="${sz.remain}"
                       value="${sz.remain}" data-size-id="${sz.id}" required></td>
          </tr>`);
      });
      createTotalPieces.textContent='0';
    }

    sizesTableBody.addEventListener('input',()=>{
      let total=0;
      sizesTableBody.querySelectorAll('input').forEach(inp=>{
        const n=parseInt(inp.value,10);
        if(!isNaN(n)&&n>0) total+=n;
      });
      createTotalPieces.textContent=total;
    });

    /* ---------- 3. Create form ---------- */
    const createForm=document.getElementById('createForm');
    createForm.addEventListener('submit',async e=>{
      e.preventDefault();
      const fd=new FormData(createForm);

      const rows=sizesTableBody.querySelectorAll('tr');
      if(!rows.length){alert('Please select a lot first.');return;}

      rows.forEach(row=>{
        const inp=row.querySelector('input');
        const val=parseInt(inp.value,10)||0;
        if(val>0) fd.append(`sizes[${inp.dataset.sizeId}]`, val);
      });

      try{
        const r=await fetch('/jeansassemblydashboard/create',{method:'POST',body:fd});
        if(r.redirected){window.location=r.url;return;}
        const j=await r.json().catch(()=>({}));
        if(j.error){alert(j.error);}else{window.location.reload();}
      }catch(err){
        console.error('Create error:',err); alert('Error creating entry.');
      }
    });

    /* ---------- 4. Lazy-load existing entries ---------- */
    let offset=0, loading=false, hasMore=true;
    const existingContainer=document.getElementById('existingEntriesContainer');
    const sentinel=document.getElementById('loadMoreSentinel');
    const searchExisting=document.getElementById('searchExisting');

    async function loadMore(){
      if(loading||!hasMore) return;
      loading=true;
      try{
        const q=encodeURIComponent(searchExisting.value.trim());
        const r=await fetch(`/jeansassemblydashboard/list-entries?offset=${offset}&search=${q}`);
        if(!r.ok) throw new Error('HTTP '+r.status);
        const data=await r.json();
        data.data.forEach(renderCard);
        hasMore=data.hasMore; offset+=data.data.length;
      }catch(e){console.error('Load error:',e);}finally{loading=false;}
    }

    function renderCard(item){
      const headerId=`hdr-${item.id}`, collId=`col-${item.id}`;
      existingContainer.insertAdjacentHTML('beforeend',`
        <div class="accordion-item">
          <h2 class="accordion-header" id="${headerId}">
            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"
                    data-bs-target="#${collId}" aria-expanded="false" aria-controls="${collId}">
              <i class="fas fa-box-open me-1"></i>
              Lot ${item.lot_no} (SKU: ${item.sku}) – Total: ${item.total_pieces}
            </button>
          </h2>
          <div id="${collId}" class="accordion-collapse collapse" aria-labelledby="${headerId}"
               data-bs-parent="#existingEntriesContainer">
            <div class="accordion-body">
              <div class="d-flex justify-content-end mb-3">
                <a href="/jeansassemblydashboard/challan/${item.id}" target="_blank" class="btn btn-info btn-sm me-2">
                  <i class="fas fa-file-alt"></i> Challan
                </a>
                <button class="btn btn-warning btn-sm" data-bs-toggle="modal"
                        data-bs-target="#updateModal" data-entry-id="${item.id}">
                  <i class="fas fa-edit"></i> Update
                </button>
              </div>
              <p><strong>ID:</strong> ${item.id}</p>
              <p><strong>Remark:</strong> ${item.remark||'N/A'}</p>
              ${item.image_url?`<p><img src="${item.image_url}" style="max-width:200px;"></p>`:''}
              <table class="table table-sm">
                <thead><tr><th>Size Label</th><th>Pieces</th></tr></thead>
                <tbody>
                  ${
                    item.sizes?.length
                      ? item.sizes.map(sz=>`<tr><td>${sz.size_label}</td><td>${sz.pieces}</td></tr>`).join('')
                      : `<tr><td colspan="2">No sizes found</td></tr>`
                  }
                </tbody>
              </table>
            </div>
          </div>
        </div>`);
    }

    const obs=new IntersectionObserver(e=>{ if(e[0].isIntersecting) loadMore(); },{threshold:0.1});
    obs.observe(sentinel);

    searchExisting.addEventListener('input',()=>{
      existingContainer.innerHTML=''; offset=0; hasMore=true; loadMore();
    });
    loadMore(); // initial load

    /* ---------- 5. Update modal ---------- */
    const updateModal=document.getElementById('updateModal');
    const updateForm=document.getElementById('updateForm');
    const updateSizesTable=document.getElementById('updateSizesTable');
    const updatingEntryId=document.getElementById('updatingEntryId');

    updateModal.addEventListener('show.bs.modal',async ev=>{
      const entryId=ev.relatedTarget.getAttribute('data-entry-id');
      updatingEntryId.textContent=entryId;
      updateForm.action=`/jeansassemblydashboard/update/${entryId}`;
      updateSizesTable.querySelector('tbody').innerHTML='';

      try{
        const r=await fetch(`/jeansassemblydashboard/update/${entryId}/json`);
        if(!r.ok) throw new Error('HTTP '+r.status);
        const {sizes}=await r.json();
        sizes.forEach(sz=>{
          updateSizesTable.querySelector('tbody').insertAdjacentHTML('beforeend',`
            <tr>
              <td>${sz.size_label}</td>
              <td>${sz.pieces}</td>
              <td>${sz.remain??999999}</td>
              <td><input type="number" class="form-control" min="0" placeholder="0"
                         data-size-label="${sz.size_label}"></td>
            </tr>`);
        });
      }catch(e){console.error('Fetch update sizes error:',e);}
    });

    updateForm.addEventListener('submit',async e=>{
      e.preventDefault();
      document.querySelectorAll('.updateSizeMappingField').forEach(el=>el.remove());

      for(const row of updateSizesTable.querySelectorAll('tbody tr')){
        const label=row.children[0].textContent;
        const remain=parseInt(row.children[2].textContent,10);
        const val=parseInt(row.children[3].querySelector('input').value||'0',10);
        if(val>remain){alert(`Cannot add ${val} to size ${label} (only ${remain} left)`);return;}
        if(val>0){
          const hidden=document.createElement('input');
          hidden.type='hidden'; hidden.className='updateSizeMappingField';
          hidden.name=`updateSizes[${label}]`; hidden.value=val;
          updateForm.appendChild(hidden);
        }
      }

      try{
        const fd=new FormData(updateForm);
        const r=await fetch(updateForm.action,{method:'POST',body:fd});
        if(r.redirected) window.location=r.url;
      }catch(err){console.error('Update error:',err);}
    });
  </script>
</body>
</html>
