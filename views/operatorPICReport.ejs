<% /* helper */ function makeQuery(obj){
  const p = new URLSearchParams(obj); return p.toString(); } %>

<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<title>PIC Report – Download</title>

<!-- Bootstrap 5 + Icons -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet">
<style>
 body { padding:1.5rem; }
 .tooltip-inner { max-width:250px; }
</style>
</head>
<body>
<h3>
 <i class="fa-solid fa-file-excel text-success me-1"></i>
 PIC Report Downloader
</h3>
<hr>

<!-- ───────────────────── Filter Form ─────────────────────────── -->
<form id="filterForm" class="row gy-2 gx-3 align-items-end">
 <!-- Each select has a tooltip -->
 <div class="col-md-2">
   <label class="form-label">
     Lot Type 
     <i class="fa-regular fa-circle-question text-muted" data-bs-toggle="tooltip"
        title="Denim = lots starting with AK/UM; hosiery = everything else"></i>
   </label>
   <select name="lotType" class="form-select">
     <option value="all">All</option>
     <option value="denim">Denim</option>
     <option value="hosiery">Hosiery</option>
   </select>
 </div>

 <div class="col-md-2">
   <label class="form-label">
     Department 
     <i class="fa-regular fa-circle-question text-muted" data-bs-toggle="tooltip"
        title="Filter report rows by where the lot currently is"></i>
   </label>
   <select name="department" class="form-select">
     <option value="all">All</option>
     <option value="cutting">Cutting</option>
     <option value="stitching">Stitching</option>
     <option value="assembly">Assembly</option>
     <option value="washing">Washing</option>
     <option value="washing_in">Washing In</option>
     <option value="finishing">Finishing</option>
   </select>
 </div>

 <div class="col-md-2">
   <label class="form-label">Status</label>
   <select name="status" class="form-select">
     <option value="all">All</option>
     <option value="pending">Pending</option>
     <option value="inline">In-Line</option>
     <option value="completed">Completed</option>
     <option value="denied">Denied</option>
     <option value="not_assigned">Not Assigned</option>
   </select>
 </div>

 <div class="col-md-2">
   <label class="form-label">Date Filter</label>
   <select name="dateFilter" class="form-select">
     <option value="createdAt">Created At</option>
     <option value="assignedOn">Assigned On</option>
   </select>
 </div>

 <div class="col-md-2">
   <label class="form-label">Start Date</label>
   <input type="date" name="startDate" class="form-control">
 </div>

 <div class="col-md-2">
   <label class="form-label">End Date</label>
   <input type="date" name="endDate" class="form-control">
 </div>

 <div class="col-12 mt-3">
   <button type="button" id="downloadBtn" class="btn btn-success">
     <i class="fa-solid fa-cloud-arrow-down me-1"></i>Download Excel
   </button>
 </div>
</form>

<!-- ───────────────────── Progress Modal ──────────────────────── -->
<div class="modal fade" id="progressModal" tabindex="-1" aria-hidden="true">
 <div class="modal-dialog  modal-dialog-centered">
   <div class="modal-content">
     <div class="modal-header">
       <h5 class="modal-title">
         <i class="fa-solid fa-spinner me-1"></i>
         Generating Report…
       </h5>
     </div>
     <div class="modal-body">
       <div class="progress">
         <div id="progressBar" class="progress-bar progress-bar-striped progress-bar-animated"
              style="width: 0%">0%</div>
       </div>
     </div>
   </div>
 </div>
</div>

<!-- Bootstrap 5 JS + Popper -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<script>
 /* enable tooltips */
 [...document.querySelectorAll('[data-bs-toggle="tooltip"]')]
   .forEach(el => new bootstrap.Tooltip(el));

 const modal   = new bootstrap.Modal('#progressModal');
 const pBar    = document.getElementById('progressBar');
 const btn     = document.getElementById('downloadBtn');
 const form    = document.getElementById('filterForm');

 btn.addEventListener('click', () => {
   /* 1) collect filters */
   const data = new FormData(form);
   const params= new URLSearchParams(data);
   const url   = '/operator/dashboard/pic-report?' + params.toString();

   /* 2) show modal */
   pBar.style.width='0%'; pBar.textContent='0%';
   modal.show();

   /* 3) fire XHR to stream Excel */
   const xhr = new XMLHttpRequest();
   xhr.open('GET', url, true);
   xhr.responseType = 'blob';

   let fake = 0, fakeTimer;
   xhr.onprogress = (e) => {
     if (e.lengthComputable) {
       const pct = Math.floor((e.loaded / e.total) * 100);
       pBar.style.width = pct + '%';
       pBar.textContent = pct + '%';
     }
   };
   /* fallback: if server doesn’t send Content-Length, simulate */
   xhr.onloadstart = () => {
     fakeTimer = setInterval(() => {
       fake = Math.min(fake + 5, 90);
       pBar.style.width = fake + '%';
       pBar.textContent = fake + '%';
     }, 400);
   };

   xhr.onload = () => {
     clearInterval(fakeTimer);
     pBar.style.width = '100%';
     pBar.textContent = '100%';

     if (xhr.status === 204) {          // no rows
       setTimeout(() => { modal.hide(); alert('No records match your filters.'); }, 400);
       return;
     }
     if (xhr.status !== 200) {
       setTimeout(() => { modal.hide(); alert('Error creating report.'); }, 400);
       return;
     }

     /* 4) trigger download */
     const blob = xhr.response;
     const link = document.createElement('a');
     link.href = URL.createObjectURL(blob);
     link.download = 'PIC-Report.xlsx';
     document.body.appendChild(link);
     link.click();
     link.remove();

     setTimeout(() => modal.hide(), 600);
   };

   xhr.onerror = () => { clearInterval(fakeTimer); modal.hide(); alert('Network error.'); };
   xhr.send();
 });
</script>
</body>
</html>
